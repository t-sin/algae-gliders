%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Sat Jun  1 23:52:08 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 21x3mm 59 9 0 () ()
%%BoundingBox: 0 0 59 10
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 21x3mm
%%PageBoundingBox: 0 0 59 10
59 10 cairo_set_page_size
%%EndPageSetup
q 0 0 59 10 rectclip
1 0 0 -1 0 10 cm q
0 g
5.953 6.719 m 5.578 8.375 l 5.156 8.578 4.734 8.641 4.312 8.641 c 2.609
 8.641 1.406 7.406 1.406 4.906 c 1.406 2.438 2.688 1.125 4.328 1.125 c 4.734
 1.125 5.109 1.203 5.469 1.391 c 5.844 3.078 l 6.484 3.078 l 6.484 1.234
 l 5.719 0.828 4.953 0.641 4.172 0.641 c 1.828 0.641 0 2.312 0 4.906 c 0
 7.516 1.734 9.156 4.156 9.156 c 5.062 9.156 5.844 8.953 6.594 8.531 c 6.594
 6.719 l h
5.953 6.719 m f
9.578 8.484 m 9.578 7.797 9.562 7.078 9.562 6.406 c 9.562 1.812 l 9.609
 0.094 l 9.438 0 l 7.453 0.469 l 7.453 0.812 l 8.391 0.906 l 8.391 6.406
 l 8.391 7.078 8.391 7.797 8.375 8.484 c 7.453 8.594 l 7.453 8.953 l 10.5
 8.953 l 10.5 8.594 l h
9.578 8.484 m f
14.184 9.125 m 15.699 9.125 17.027 8.047 17.027 6.062 c 17.027 4.062 15.652
 3 14.184 3 c 12.684 3 11.324 4.078 11.324 6.062 c 11.324 8.047 12.637 9.125
 14.184 9.125 c h
14.184 8.672 m 13.184 8.672 12.605 7.797 12.605 6.078 c 12.605 4.328 13.184
 3.438 14.184 3.438 c 15.152 3.438 15.746 4.328 15.746 6.078 c 15.746 7.797
 15.152 8.672 14.184 8.672 c h
14.184 8.672 m f
22.262 7 m 21.84 8.531 l 19.23 8.531 l 22.637 3.531 l 22.637 3.172 l 18.059
 3.172 l 17.949 4.938 l 18.496 5 l 18.887 3.594 l 21.34 3.594 l 17.887 8.594
 l 17.887 8.953 l 22.699 8.953 l 22.809 7 l h
22.262 7 m f
29.125 8.5 m 29.125 4.922 l 29.156 3.188 l 29.031 3.062 l 27.125 3.297 
l 27.125 3.625 l 27.969 3.797 l 27.938 7.562 l 27.469 8.031 26.938 8.297
 26.375 8.297 c 25.75 8.297 25.406 7.953 25.406 6.906 c 25.406 4.922 l 25.453
 3.188 l 25.344 3.062 l 23.406 3.281 l 23.406 3.625 l 24.266 3.797 l 24.234
 6.906 l 24.203 8.531 24.828 9.125 25.859 9.125 c 26.641 9.125 27.391 8.672
 27.969 7.953 c 28.062 9.062 l 29.906 8.953 l 29.906 8.594 l h
29.125 8.5 m f
32.703 3.125 m 32.547 3.016 l 30.688 3.656 l 30.688 3.984 l 31.609 4.078
 l 31.625 4.594 31.656 5 31.656 5.703 c 31.656 6.406 l 31.656 6.969 31.641
 7.859 31.625 8.484 c 30.781 8.594 l 30.781 8.953 l 33.859 8.953 l 33.859
 8.594 l 32.844 8.453 l 32.828 7.828 32.828 6.969 32.828 6.406 c 32.828 
5.484 l 33.047 4.703 33.375 4.188 33.859 3.812 c 34 3.953 l 34.234 4.219
 34.469 4.391 34.797 4.391 c 35.281 4.391 35.5 4.062 35.5 3.547 c 35.375
 3.172 34.984 3 34.578 3 c 33.906 3 33.188 3.594 32.828 4.625 c h
32.703 3.125 m f
37.148 5.594 m 37.227 4.078 37.945 3.438 38.664 3.438 c 39.414 3.438 39.93
 4.062 39.93 4.875 c 39.93 5.328 39.805 5.594 39.305 5.594 c h
40.977 6.016 m 41.039 5.844 41.055 5.625 41.055 5.344 c 41.055 3.953 40.133
 3 38.742 3 c 37.242 3 35.883 4.172 35.883 6.078 c 35.883 8 37.055 9.125
 38.711 9.125 c 39.789 9.125 40.586 8.594 41.023 7.719 c 40.805 7.562 l 
40.383 8.094 39.898 8.422 39.117 8.422 c 37.992 8.422 37.164 7.656 37.133
 6.016 c h
40.977 6.016 m f
50.898 6.719 m 50.523 8.375 l 50.102 8.578 49.68 8.641 49.258 8.641 c 47.555
 8.641 46.352 7.406 46.352 4.906 c 46.352 2.438 47.633 1.125 49.273 1.125
 c 49.68 1.125 50.055 1.203 50.414 1.391 c 50.789 3.078 l 51.43 3.078 l 
51.43 1.234 l 50.664 0.828 49.898 0.641 49.117 0.641 c 46.773 0.641 44.945
 2.312 44.945 4.906 c 44.945 7.516 46.68 9.156 49.102 9.156 c 50.008 9.156
 50.789 8.953 51.539 8.531 c 51.539 6.719 l h
50.898 6.719 m f
58.086 6.641 m 57.648 8.469 l 54.977 8.469 l 54.977 7.375 54.977 6.297 
54.977 5.359 c 54.977 4.578 l 54.977 3.516 54.977 2.438 54.977 1.359 c 56.117
 1.234 l 56.117 0.844 l 52.586 0.844 l 52.586 1.234 l 53.664 1.359 l 53.695
 2.438 53.695 3.531 53.695 4.625 c 53.695 5.297 l 53.695 6.297 53.695 7.359
 53.664 8.438 c 52.586 8.562 l 52.586 8.953 l 58.648 8.953 l 58.695 6.641
 l h
58.086 6.641 m f
Q Q
showpage
%%Trailer
%%EOF
